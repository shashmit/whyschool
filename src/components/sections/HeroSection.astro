---
export interface Props {
  title: string;
  subtitle: string;
  ctaText: string;
  ctaLink: string;
  backgroundImage?: string;
}

const { title, subtitle, ctaText, ctaLink, backgroundImage } = Astro.props;
---

<section class="relative bg-gradient-to-br from-stone-50 via-white to-stone-100 text-gray-900 overflow-hidden min-h-screen flex items-start sm:items-center pt-8 pb-28 sm:pb-32 hero-section" data-scroll-fade>
  <!-- Organic Background Shapes with Parallax -->

  <!-- Content with proper centering -->
  <div class="relative w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Stylized WhySchool Title -->
    <div class="text-center mb-10 md:mb-4">
      <div class="flex items-baseline justify-center">
        <h1 class="text-6xl sm:text-7xl md:text-8xl lg:text-9xl font-bold text-gray-300 opacity-60 select-none">
          WhyS
        </h1>
        <h1 class="text-6xl sm:text-7xl md:text-8xl lg:text-9xl font-bold text-orange-400 opacity-80 select-none transform scale-x-[-1] translate-y-4 md:translate-y-10">
          ?
        </h1>
        <h1 class="text-6xl sm:text-7xl md:text-8xl lg:text-9xl font-bold text-gray-300 opacity-60 select-none">
          hool
        </h1>
      </div>
    </div>
    
    <div class="flex flex-col items-center gap-8 lg:gap-16 lg:min-h-[80vh]">
      <!-- Small tag with entrance delay -->
      <div class="inline-flex items-center px-4 py-2 bg-green-100 text-green-700 border border-green-300 rounded-full text-sm font-medium hero-tag-animate mt-4">
        <svg class="w-4 h-4 mr-2 animate-pulse" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
        </svg>
        Educational Innovation
      </div>
      
      <!-- Visual Element with enhanced animations - Now centered -->
      <div class="relative hero-visual-animate w-full max-w-2xl mx-auto mt-8 pb-8 sm:pb-0">
        <div class="relative">
          <!-- Main floating card with enhanced hover effects - Mobile optimized -->
          <div class="relative animate-float-card">
            <!-- Large organic shape background with rotation - Hidden on mobile for performance -->
            <div class="hidden lg:block absolute -inset-8 bg-gradient-to-br from-green-100/40 to-orange-100/30 rounded-[3rem] transform rotate-3 animate-rotate-gentle"></div>
            
            <!-- Main content card with enhanced interactions - Mobile optimized -->
            <div class="relative bg-white/90 backdrop-blur-sm rounded-2xl lg:rounded-3xl p-4 sm:p-6 lg:p-8 shadow-2xl border border-gray-200 transform ">
              <!-- Video Container -->
              <div class="relative mb-4 lg:mb-6 rounded-xl lg:rounded-2xl overflow-hidden">
                <video 
                  id="hero-video"
                  class="w-full h-48 sm:h-56 lg:h-80 object-cover rounded-xl lg:rounded-2xl"
                  autoplay 
                  muted
                  loop
                  playsinline
                >
                  <source src="/src/assets/The_Importance_of_Why_in_Education.mp4" type="video/mp4">
                  Your browser does not support the video tag.
                </video>
                
                <!-- Mute/Unmute Button -->
                <button 
                  id="mute-toggle"
                  class="absolute top-3 right-3 bg-black/50 hover:bg-black/70 text-white p-2 rounded-full transition-all duration-200 backdrop-blur-sm"
                  aria-label="Toggle mute"
                >
                  <svg id="mute-icon" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z" clip-rule="evenodd"/>
                    <path id="mute-slash" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2"/>
                  </svg>
                </button>
              </div>

              <!-- Main title positioned below video -->
              <div class="text-center mb-4 lg:mb-6">
                <h1 class="text-2xl sm:text-3xl lg:text-4xl xl:text-5xl font-bold leading-tight text-black hero-title-animate">
                  {title}
                </h1>
              </div>

              <!-- Card Content (initially hidden, shown after video) -->
              <div id="card-content" class="opacity-100 transition-opacity duration-500">
              
                <!-- Progress indicator with animation -->
                <div class="flex items-center justify-between">
                  <div class="flex items-center space-x-2">
                    <div class="w-6 h-6 lg:w-8 lg:h-8 bg-green-100 border border-green-300 rounded-full flex items-center justify-center">
                      <svg class="w-3 h-3 lg:w-4 lg:h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                      </svg>
                    </div>
                    <span class="text-xs lg:text-sm font-medium text-gray-700">78% Complete</span>
                  </div>
                  <div class="text-xs lg:text-sm text-orange-500 font-medium">Career Clarity</div>
                </div>
              </div>
            </div>
            </div>
          </div>
          
          <!-- Enhanced smaller floating cards - Mobile optimized -->
          <div class="relative animate-float-card-small animation-delay-1000">
            <!-- Background shape for first floating card -->
            <div class="hidden lg:block absolute -inset-4 bg-gradient-to-br from-orange-100/30 to-green-100/20 rounded-[2rem] transform rotate-6 animate-rotate-gentle"></div>
            
            <div class="absolute top-2 -right-2 lg:-top-4 lg:-right-4 bg-white/95 backdrop-blur-sm rounded-xl lg:rounded-2xl p-2 lg:p-4 shadow-lg border border-gray-200 transform rotate-6 lg:rotate-12 hover:rotate-3 lg:hover:rotate-6 hover:scale-110 transition-all duration-500">
              <div class="flex items-center space-x-1 lg:space-x-2">
                <div class="w-6 h-6 lg:w-8 lg:h-8 bg-gradient-to-br from-green-100 to-green-200 rounded-md lg:rounded-lg flex items-center justify-center">
                  <svg class="w-3 h-3 lg:w-4 lg:h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
                  </svg>
                </div>
                <div class="hidden sm:block">
                  <div class="text-xs font-semibold text-black">Curiosity</div>
                  <div class="text-xs text-gray-600">Explore</div>
                </div>
              </div>
            </div>
          </div>
          
          <div class="relative animate-float-card-small animation-delay-1200">
            <!-- Background shape for second floating card -->
            <div class="hidden lg:block absolute -inset-4 bg-gradient-to-br from-orange-100/30 to-green-100/20 rounded-[2rem] transform -rotate-3 animate-rotate-gentle"></div>
            
            <div class="absolute -bottom-3 -left-3 lg:bottom-60 lg:-left-6 bg-white/95 backdrop-blur-sm rounded-xl lg:rounded-2xl p-2 lg:p-4 shadow-lg border border-gray-200 transform -rotate-3 lg:-rotate-6 hover:rotate-0 hover:scale-110 transition-all duration-500">
              <div class="flex items-center space-x-1 lg:space-x-2">
                <div class="w-6 h-6 lg:w-8 lg:h-8 bg-gradient-to-br from-orange-100 to-orange-200 rounded-md lg:rounded-lg flex items-center justify-center">
                  <svg class="w-3 h-3 lg:w-4 lg:h-4 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                  </svg>
                </div>
                <div class="hidden sm:block">
                  <div class="text-xs font-semibold text-black">Confidence</div>
                  <div class="text-xs text-gray-600">Achieve</div>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Enhanced decorative geometric shape - Mobile optimized -->
          <div class="hidden lg:block absolute top-1/2 right-0 transform translate-x-8 animate-float-geometric">
            <div class="w-16 h-16 bg-gradient-to-br from-green-100/40 to-orange-100/30 rounded-2xl transform rotate-45 animate-rotate-gentle"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Enhanced Scroll Indicator -->
  <div class="absolute bottom-20 left-1/2 transform -translate-x-1/2 animate-bounce-gentle">
    <div class="w-6 h-10 border-2 border-gray-400 rounded-full flex justify-center hero-scroll-animate">
      <div class="w-1 h-3 bg-green-500 rounded-full mt-2 animate-scroll-indicator"></div>
    </div>
  </div>
</section>

<style>
  /* Enhanced Animation Keyframes */
  @keyframes spin-slow {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes fadeInRight {
    from {
      opacity: 0;
      transform: translateX(30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  @keyframes floatSlow {
    0%, 100% { transform: translateY(0px) rotate(12deg); }
    50% { transform: translateY(-20px) rotate(12deg); }
  }
  
  @keyframes floatReverse {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(15px); }
  }
  
  @keyframes floatGentle {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }
  
  @keyframes floatCard {
    0%, 100% { transform: translateY(0px) rotate(3deg); }
    50% { transform: translateY(-8px) rotate(3deg); }
  }
  
  @keyframes floatCardSmall {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-5px); }
  }
  
  @keyframes floatTiny {
    0%, 100% { transform: translateY(0px) scale(1); }
    50% { transform: translateY(-8px) scale(1.1); }
  }
  
  @keyframes floatGeometric {
    0%, 100% { transform: translateX(8px) translateY(0px) rotate(45deg); }
    50% { transform: translateX(8px) translateY(-10px) rotate(45deg); }
  }
  
  @keyframes rotateGentle {
    0% { transform: rotate(3deg); }
    50% { transform: rotate(-2deg); }
    100% { transform: rotate(3deg); }
  }
  
  @keyframes pulseGlow {
    0%, 100% { 
      opacity: 1;
      box-shadow: 0 0 5px currentColor;
    }
    50% { 
      opacity: 0.7;
      box-shadow: 0 0 20px currentColor;
    }
  }
  
  @keyframes pulseSequence {
    0%, 80%, 100% { opacity: 0.4; }
    40% { opacity: 1; }
  }
  
  @keyframes textGlow {
    0%, 100% { text-shadow: 0 0 5px currentColor; }
    50% { text-shadow: 0 0 15px currentColor, 0 0 25px currentColor; }
  }
  
  @keyframes bounceGentle {
    0%, 20%, 53%, 80%, 100% { transform: translateY(0px); }
    40%, 43% { transform: translateY(-8px); }
  }
  
  @keyframes pingSlow {
    75%, 100% {
      transform: scale(2);
      opacity: 0;
    }
  }
  
  @keyframes twinkle {
    0%, 100% { opacity: 0.3; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.2); }
  }
  
  @keyframes orbit {
    0% { transform: rotate(0deg) translateX(20px) rotate(0deg); }
    100% { transform: rotate(360deg) translateX(20px) rotate(-360deg); }
  }
  
  @keyframes scrollIndicator {
    0% { opacity: 1; transform: translateY(0); }
    50% { opacity: 0.3; transform: translateY(8px); }
    100% { opacity: 1; transform: translateY(0); }
  }
  
  /* Animation Classes */
  .animate-spin-slow { animation: spin-slow 8s linear infinite; }
  .animate-fade-in-up { animation: fadeInUp 0.8s ease-out forwards; }
  .animate-fade-in-right { animation: fadeInRight 0.8s ease-out forwards; }
  .animate-float-slow { animation: floatSlow 6s ease-in-out infinite; }
  .animate-float-reverse { animation: floatReverse 8s ease-in-out infinite; }
  .animate-float-gentle { animation: floatGentle 10s ease-in-out infinite; }
  .animate-float-card { animation: floatCard 4s ease-in-out infinite; }
  .animate-float-card-small { animation: floatCardSmall 3s ease-in-out infinite; }
  .animate-float-tiny { animation: floatTiny 5s ease-in-out infinite; }
  .animate-float-geometric { animation: floatGeometric 7s ease-in-out infinite; }
  .animate-rotate-gentle { animation: rotateGentle 8s ease-in-out infinite; }
  .animate-pulse-glow { animation: pulseGlow 2s ease-in-out infinite; }
  .animate-pulse-sequence { animation: pulseSequence 2s ease-in-out infinite; }
  .animate-text-glow { animation: textGlow 3s ease-in-out infinite; }
  .animate-bounce-gentle { animation: bounceGentle 2s infinite; }
  .animate-ping-slow { animation: pingSlow 3s cubic-bezier(0, 0, 0.2, 1) infinite; }
  .animate-twinkle { animation: twinkle 4s ease-in-out infinite; }
  .animate-orbit { animation: orbit 20s linear infinite; }
  .animate-scroll-indicator { animation: scrollIndicator 2s ease-in-out infinite; }
  
  /* Mobile-specific optimizations */
  @media (max-width: 1024px) {
    .animate-float-card { animation-duration: 6s; }
    .animate-float-card-small { animation-duration: 4s; }
    .animate-pulse-glow { animation-duration: 3s; }
    .animate-text-glow { animation-duration: 4s; }
  }
  
  /* Animation Delays */
  .animation-delay-200 { animation-delay: 0.2s; }
  .animation-delay-400 { animation-delay: 0.4s; }
  .animation-delay-600 { animation-delay: 0.6s; }
  .animation-delay-800 { animation-delay: 0.8s; }
  .animation-delay-1000 { animation-delay: 1s; }
  .animation-delay-1200 { animation-delay: 1.2s; }
  .animation-delay-1400 { animation-delay: 1.4s; }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const video = document.getElementById('hero-video');
    const muteToggle = document.getElementById('mute-toggle');
    const muteIcon = document.getElementById('mute-icon');
    const muteSlash = document.getElementById('mute-slash');
    
    if (video && muteToggle && muteIcon && muteSlash) {
      // Update icon based on current mute state
      function updateMuteIcon() {
        if (video.muted) {
          muteSlash.style.display = 'block';
        } else {
          muteSlash.style.display = 'none';
        }
      }
      
      // Initialize icon state
      updateMuteIcon();
      
      // Toggle mute on button click
      muteToggle.addEventListener('click', function() {
        video.muted = !video.muted;
        updateMuteIcon();
      });
    }
  });
</script>